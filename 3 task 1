/*start up*/
RCC->APB2ENR |= RCC_APB2ENR_TIM1EN; //enable clock for timer 1 (tim1 = 72MHz)
RCC->AHBENR |= RCC_AHBENR_GPIOEEN; // Enable clock on GPIO port E

//config pin to ana mode
//config pin for T and R arr (PP?)

GPIOE->AFR[0]|=0x00000200; //Set PE.2 to output TIM3_CH1??

TIM1->PSC = 100; // prescalor value in Timer ‘x’ as 100 assuming timer 1 (72MHz)
TIM1->ARR = 7200;  // Auto-Reset Register of Timer ‘x’ set to 7200 counts - sets to 100Hz
TIM1->CCMR1 |= 0x00000060; //set channel 1 timer 1 to PWM mode using CCMR
TIM1->CCR1 = 10; //Sets on time to 10 clock pulses - just an eg??
TIM1->BDTR |= TIM_BDTR_MOE; //Enable channel 1 to be output to the GPIO pin
TIM1->CCER |= TIM_CCER_CC1E; // Enable channel 1 to be output in the Capture/Compare Enable register
TIM1->CR1 |= TIM_CR1_CEN; //Enable timer 1

//task1 
//DAC code to op value from tim INT, show value on LEDs
//config tim 1 to op pwm sig on PE.9 (or on pin where led is connected)
//config 2 more CHs to be op by tim (op mapped to pin where leds are connected)
//note - have the 3 leds operate on 10,50and 90% PWM op values

/* Set the duty cycle to 50% */
TIM3->CCR1 = TIM3->ARR / 2;

https://controllerstech.com/pwm-in-stm32/
